declare const config: {
    languageOptions: {
        parser: string;
        parserOptions: {
            ecmaVersion: number;
            sourceType: string;
            project: string;
            ecmaFeatures: {
                jsx: boolean;
            };
        };
        globals: {
            browser: boolean;
            node: boolean;
            es2022: boolean;
        };
    };
    plugins: {
        '@typescript-eslint': string;
        '@angular-eslint': string;
        angular: string;
    };
    extends: string[];
    rules: {
        'no-host-binding-listener': string;
        'no-ngclass': string;
        'no-ngoptimizedimage-missing': string;
        'no-ngstyle': string;
        'no-signal-mutate': string;
        'no-standalone-true': string;
        'require-input-output-func': string;
        'require-onpush': string;
        '@typescript-eslint/no-explicit-any': string;
        '@typescript-eslint/explicit-function-return-type': string;
        '@typescript-eslint/no-unused-vars': string;
        '@typescript-eslint/prefer-const': string;
        '@typescript-eslint/no-var-requires': string;
        '@angular-eslint/component-selector': (string | {
            type: string;
            prefix: string;
            style: string;
        })[];
        '@angular-eslint/directive-selector': (string | {
            type: string;
            prefix: string;
            style: string;
        })[];
        '@angular-eslint/no-output-native': string;
        '@angular-eslint/prefer-on-push-component-change-detection': string;
        '@angular-eslint/use-injectable-provided-in': string;
        'prefer-const': string;
        'no-var': string;
        'object-shorthand': string;
        'prefer-template': string;
        'template-curly-spacing': string;
        'arrow-spacing': string;
        'no-duplicate-imports': string;
        'sort-imports': (string | {
            ignoreCase: boolean;
            ignoreDeclarationSort: boolean;
            ignoreMemberSort: boolean;
            memberSyntaxSortOrder: string[];
            allowSeparatedGroups: boolean;
        })[];
    };
    overrides: ({
        files: string[];
        parserOptions: {
            project: string;
        };
        rules?: undefined;
    } | {
        files: string[];
        rules: {
            '@angular-eslint/component-class-suffix': string;
            '@angular-eslint/component-max-inline-declarations': string;
            '@angular-eslint/use-injectable-provided-in'?: undefined;
        };
        parserOptions?: undefined;
    } | {
        files: string[];
        rules: {
            '@angular-eslint/use-injectable-provided-in': string;
            '@angular-eslint/component-class-suffix'?: undefined;
            '@angular-eslint/component-max-inline-declarations'?: undefined;
        };
        parserOptions?: undefined;
    })[];
    settings: {
        'import/resolver': {
            typescript: {};
        };
    };
};
export default config;
